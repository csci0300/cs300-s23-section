# Apple Silicon Mac Notes

Running GDB in Docker on an Apple Silicon Mac or another ARM64-based computer requires you to run GDB with special arguments. Hereâ€™s how.

 1. In Docker, run GDB this way: gdb -ix fun.gdb
 2. Specify the program youâ€™re working on: fun-file "1" (note the quotes), or ff "1" for short.
 3. Run the program: run-fun [arguments], or rf for short. Youâ€™ll have to quote each argument. (The normal r/run will not work.)

Here is an example session:
```
kohler@Eddies-MacBook-Pro:asms1$ ../cs300-run-docker -a
cs300-user@0968f6517c97:~/sections/section3$ gdb -ix fun.gdb
GNU gdb (Ubuntu 12.0.90-0ubuntu1) 12.0.90
........
The target architecture is set to "i386:x86-64".
(gdb) ff "1"
$1 = "1"
(gdb) rf
0x00000040018262b0 in ?? ()
(gdb) c
Continuing.
ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ no fun ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿
[Inferior 1 (process 1) exited with code 01]
(gdb) b no_fun
Breakpoint 1 at 0x4000001305: file fun.cc, line 11.
(gdb) rf
0x0000004000807100 in ?? ()
(gdb) c
Continuing.

Breakpoint 1, no_fun () at fun.c:11
15      std::cerr << "ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ no fun ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿\n";
(gdb) rf "still no fun?"
Kill the program being debugged? (y or n) [answered Y; input not from terminal]
[Inferior 1 (process 1) killed]
qemu-x86_64: QEMU: Terminated via GDBstub
0x00000040018262b0 in ?? ()
(gdb) c
Continuing.

Breakpoint 1, no_fun () at fun.c:11
15      std::cerr << "ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ no fun ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿ðŸ˜¿\n";
(gdb) rf "now fun!"
Kill the program being debugged? (y or n) [answered Y; input not from terminal]
qemu-x86_64: QEMU: Terminated via GDBstub
[Inferior 1 (process 1) killed]
0x00000040018262b0 in ?? ()
(gdb) c
Continuing.
ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽŠðŸŽŠðŸŽŠðŸŽŠðŸŒ½ðŸŒ½ðŸŒ½ðŸŽŠðŸŽŠðŸŽŠðŸŽŠðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰
                 FUN
ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽŠðŸŽŠðŸŽŠðŸŽŠðŸŒ½ðŸŒ½ðŸŒ½ðŸŽŠðŸŽŠðŸŽŠðŸŽŠðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰
[Inferior 1 (process 1) exited normally]
(gdb)
```
